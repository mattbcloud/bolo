// Generated by CoffeeScript 1.12.7
(function() {
  var BoloObject, Explosion, floor,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  floor = Math.floor;

  BoloObject = require('../object');

  Explosion = (function(superClass) {
    extend(Explosion, superClass);

    function Explosion() {
      return Explosion.__super__.constructor.apply(this, arguments);
    }

    Explosion.prototype.styled = false;

    Explosion.prototype.serialization = function(isCreate, p) {
      if (isCreate) {
        p('H', 'x');
        p('H', 'y');
      }
      return p('B', 'lifespan');
    };

    Explosion.prototype.getTile = function() {
      switch (floor(this.lifespan / 3)) {
        case 7:
          return [20, 3];
        case 6:
          return [21, 3];
        case 5:
          return [20, 4];
        case 4:
          return [21, 4];
        case 3:
          return [20, 5];
        case 2:
          return [21, 5];
        case 1:
          return [18, 4];
        default:
          return [19, 4];
      }
    };

    Explosion.prototype.spawn = function(x, y) {
      this.x = x;
      this.y = y;
      return this.lifespan = 23;
    };

    Explosion.prototype.update = function() {
      if (this.lifespan-- === 0) {
        return this.world.destroy(this);
      }
    };

    return Explosion;

  })(BoloObject);

  module.exports = Explosion;

}).call(this);
