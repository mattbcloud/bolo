// Generated by CoffeeScript 1.12.7
(function() {
  var Common2dRenderer, Direct2dRenderer, TILE_SIZE_PIXELS, ceil, floor,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  floor = Math.floor, ceil = Math.ceil;

  TILE_SIZE_PIXELS = require('../../constants').TILE_SIZE_PIXELS;

  Common2dRenderer = require('./common_2d');

  Direct2dRenderer = (function(superClass) {
    extend(Direct2dRenderer, superClass);

    function Direct2dRenderer() {
      return Direct2dRenderer.__super__.constructor.apply(this, arguments);
    }

    Direct2dRenderer.prototype.onRetile = function(cell, tx, ty) {
      return cell.tile = [tx, ty];
    };

    Direct2dRenderer.prototype.drawMap = function(sx, sy, w, h) {
      var etx, ety, ex, ey, stx, sty;
      ex = sx + w - 1;
      ey = sy + h - 1;
      stx = floor(sx / TILE_SIZE_PIXELS);
      sty = floor(sy / TILE_SIZE_PIXELS);
      etx = ceil(ex / TILE_SIZE_PIXELS);
      ety = ceil(ey / TILE_SIZE_PIXELS);
      return this.world.map.each((function(_this) {
        return function(cell) {
          var obj, ref;
          if (obj = cell.pill || cell.base) {
            return _this.drawStyledTile(cell.tile[0], cell.tile[1], (ref = obj.owner) != null ? ref.$.team : void 0, cell.x * TILE_SIZE_PIXELS, cell.y * TILE_SIZE_PIXELS);
          } else {
            return _this.drawTile(cell.tile[0], cell.tile[1], cell.x * TILE_SIZE_PIXELS, cell.y * TILE_SIZE_PIXELS);
          }
        };
      })(this), stx, sty, etx, ety);
    };

    return Direct2dRenderer;

  })(Common2dRenderer);

  module.exports = Direct2dRenderer;

}).call(this);
