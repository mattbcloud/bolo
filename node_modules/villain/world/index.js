// Generated by CoffeeScript 1.12.7
(function() {
  var BaseWorld, LocalWorld,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice;

  BaseWorld = require('./base');

  LocalWorld = (function(superClass) {
    extend(LocalWorld, superClass);

    function LocalWorld() {
      return LocalWorld.__super__.constructor.apply(this, arguments);
    }

    LocalWorld.prototype.spawn = function() {
      var args, obj, type;
      type = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      obj = this.insert(new type(this));
      obj.spawn.apply(obj, args);
      return obj;
    };

    LocalWorld.prototype.update = function(obj) {
      obj.update();
      obj.emit('update');
      return obj;
    };

    LocalWorld.prototype.destroy = function(obj) {
      obj.destroy();
      obj.emit('destroy');
      obj.emit('finalize');
      this.remove(obj);
      return obj;
    };

    return LocalWorld;

  })(BaseWorld);

  module.exports = LocalWorld;

}).call(this);
