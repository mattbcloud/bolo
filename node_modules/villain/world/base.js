// Generated by CoffeeScript 1.12.7
(function() {
  var BaseWorld,
    slice = [].slice;

  BaseWorld = (function() {
    function BaseWorld() {
      this.objects = [];
    }

    BaseWorld.prototype.tick = function() {
      var j, len, obj, ref;
      ref = this.objects.slice(0);
      for (j = 0, len = ref.length; j < len; j++) {
        obj = ref[j];
        this.update(obj);
      }
    };

    BaseWorld.prototype.insert = function(obj) {
      var i, j, k, len, other, ref, ref1, ref2;
      ref = this.objects;
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        other = ref[i];
        if (obj.updatePriority > other.updatePriority) {
          break;
        }
      }
      this.objects.splice(i, 0, obj);
      for (i = k = ref1 = i, ref2 = this.objects.length; ref1 <= ref2 ? k < ref2 : k > ref2; i = ref1 <= ref2 ? ++k : --k) {
        this.objects[i].idx = i;
      }
      return obj;
    };

    BaseWorld.prototype.remove = function(obj) {
      var i, j, ref, ref1;
      this.objects.splice(obj.idx, 1);
      for (i = j = ref = obj.idx, ref1 = this.objects.length; ref <= ref1 ? j < ref1 : j > ref1; i = ref <= ref1 ? ++j : --j) {
        this.objects[i].idx = i;
      }
      obj.idx = null;
      return obj;
    };

    BaseWorld.prototype.registerType = function(type) {};

    BaseWorld.prototype.spawn = function() {
      var args, type;
      type = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
    };

    BaseWorld.prototype.update = function(obj) {};

    BaseWorld.prototype.destroy = function(obj) {};

    return BaseWorld;

  })();

  module.exports = BaseWorld;

}).call(this);
